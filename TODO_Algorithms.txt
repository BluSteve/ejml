
For 0.17 Release
- Block SVD
- Block Hessenberg
- Remove QR-col and replace with QR-tran?
- Adapt QR-tran into LQ
- Remove QRDecompositionHouseholder?
- Remove chol-block for dense with chol-block64?
  * reduce cache misses in invert and see if its faster
- Merge inner triangular solver code
- Require LinearSolverFactory to take in a matrix so it can figure out alg to use?
- Improve cholesky block inverse by taking advantage of symmetry

----------------------------------------------------------

- LU
  - block

- Cholesky
  - unwrap for small matrices.  improve accuracy
  - improve stability

- Linear Solver
  * Iterative
  * Add condition(), use Hager's method? pg 132
  * Put this new condition into NormOps since it should be much faster

- QR
  * Replace col with tran variant of QR decomposition?
    - tran does not use a custom matrix format.
    - tran seems to be about 10% slower on small matrices.

- QR with column pivoting
  * Update BidiagonalDecompositionTall to use that then update SvdImplicitQrDecompose.

- SVD
  - Save up rotators, multiply against each other, then multiply against U and V
  - Divide and conquer algorithm
  - An implementation that just finds zero singular values

- Incremental SVD

- Eigen decomposition
  - Divide and conquer algorithm.

- Accurate version of symmetric eigenvalue for 2 by 2
  - SVD
  - SymmEig

- Fast Matrix Multiply
- hard code cholesky decomposition for small matrices

- Matrix Multiplication:
  - Try a variant on mult_aux that does the vector mult up to block size then goes down a row.
  - Finish vector vector multiply
  - Code generator for matrix vector ops
  - Add matrix vector multiply
  - Auto switch to all of above in CommonOps